// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// const lengthOfSequence = (arr, n) =>
//   arr.filter(num => num === n).length === 2
//     ? arr.slice(arr.indexOf(n), arr.lastIndexOf(n) + 1).length
//     : 0;
// console.log(lengthOfSequence([2, 2], 2));

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// const sumDigits = num =>
//   (num + '')
//     .split('')
//     .filter(num => num !== '-')
//     .reduce((acc, cur) => (acc += +cur), 0);
// console.log(sumDigits(-18));

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// const solve = s =>
//   s.split('').filter(l => l.toLowerCase() === l).length >= s.length / 2
//     ? s.toLoverCase()
//     : s.toUpperCase();
// console.log(solve('CODde'));

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// function encrypt(text, n) {
//   const e = t =>
//     t
//       .split('')
//       .filter((n, i) => i % 2 === 1)
//       .join('') +
//     t
//       .split('')
//       .filter((n, i) => i % 2 === 0)
//       .join('');
//   let result = text;
//   for (let i = 0; i < n; i++) {
//     result = e(result);
//   }
//   return result;
// }

// function decrypt(encryptedText, n) {
//   const e = t => {
//     let res = '';
//     let cur = t.length % 2 === 0 ? Math.ceil(t.length / 2) : Math.ceil(t.length / 2) - 1;
//     let def = true;
//     for (let i = 0; i < t.length; i++) {
//       res += t[cur];
//       def ? (cur -= Math.floor(t.length / 2)) : (cur += Math.floor(t.length / 2) + 1);
//       def = !def;
//     }
//     return res;
//   };
//   let result = encryptedText;
//   for (let i = 0; i < n; i++) {
//     result = e(result);
//   }
//   return result;
// }

// console.log(encrypt('0123456', 1));
// console.log(decrypt(encrypt('0123456', 1), 1));

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
